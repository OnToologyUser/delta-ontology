digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "delta:Phase" "saref:Measurement" "time:Duration" "delta:CustomerCluster" "delta:Index" "delta:SystemConstraint" "saref:UnitOfMeasure" "saref:FeatureOfInterest" "delta:Customer" "delta:Incentive" "delta:VirtualNode" "delta:Transaction" "delta:Sector" "http://www.opengis.net/ont/geosparql#Geometry" "delta:Violation" "delta:Aggregator" "delta:Measurement" "delta:ComfortSetting" "delta:MarketSettlement" "delta:Reward" "time:TemporalEntity" "delta:SmartContract" "delta:Asset" "http://www.opengis.net/ont/geosparql#Feature" "delta:ViolationCondition" "delta:Profile" "saref:Property" "delta:Payment" ; /*classes style*/
	"NULL" -> "delta:hasPhase" [ label = "owl:onProperty" ];
	"NULL" -> "delta:ComfortSetting" [ label = "owl:allValuesFrom" ];
	"NULL" -> "https://w3id.org/def/openadr#hasDuration" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasSystemConstraint" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasSmartContract" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasCreationDateTime" [ label = "owl:onProperty" ];
	"NULL" -> "saref:measuresProperty" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasViolationCondition" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:dateTime" [ label = "owl:someValuesFrom" ];
	"NULL" -> "time:TemporalEntity" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:isMeasurementOf" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasReliability" [ label = "owl:onProperty" ];
	"NULL" -> "delta:Violation" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:hasRequiredMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "delta:Profile" [ label = "owl:allValuesFrom" ];
	"NULL" -> "xsd:float" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:Reward" [ label = "owl:allValuesFrom" ];
	"NULL" -> "xsd:string" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:Measurement" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:status" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Property" [ label = "owl:allValuesFrom" ];
	"NULL" -> "https://saref.etsi.org/saref4city/isDerivedFrom" [ label = "owl:onProperty" ];
	"NULL" -> "delta:Phase" [ label = "owl:someValuesFrom" ];
	"NULL" -> "time:Duration" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:isLocatedAt" [ label = "owl:onProperty" ];
	"NULL" -> "owl:rational" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:hasValue" [ label = "owl:onProperty" ];
	"NULL" -> "delta:isAllocatedIn" [ label = "owl:onProperty" ];
	"NULL" -> "delta:sectorName" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Measurement" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:hasReward" [ label = "owl:onProperty" ];
	"NULL" -> "delta:clusterName" [ label = "owl:onProperty" ];
	"NULL" -> "delta:Payment" [ label = "owl:allValuesFrom" ];
	"NULL" -> "f5ed27c1f414415faa9451e0b15a33c6" [ label = "owl:oneOf" ];
	"NULL" -> "delta:hasPoint" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasHref" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasEstimatedMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "saref:isAbout" [ label = "owl:onProperty" ];
	"NULL" -> "delta:Asset" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:Aggregator" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:Incentive" [ label = "owl:allValuesFrom" ];
	"NULL" -> "rdf:nil" [ label = "rdf:rest" ];
	"NULL" -> "delta:MarketSettlement" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:consumes" [ label = "owl:onProperty" ];
	"NULL" -> "saref:isMeasuredIn" [ label = "owl:onProperty" ];
	"NULL" -> "delta:ViolationCondition" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:hasAggregatedProperty" [ label = "owl:onProperty" ];
	"NULL" -> "0bd471e397ec62459c3a65e3a1ea7329" [ label = "owl:oneOf" ];
	"NULL" -> "7cb14ce0a907f73250c4e3343a7f5fe5" [ label = "rdf:rest" ];
	"NULL" -> "delta:detects" [ label = "owl:onProperty" ];
	"NULL" -> "rdfs:Literal" [ label = "owl:someValuesFrom" ];
	"NULL" -> "1d5ddb8470483391b26a872f507ee038" [ label = "rdf:rest" ];
	"NULL" -> "8acc425e1064cafc1cca8419c3b1e4be" [ label = "rdf:rest" ];
	"NULL" -> "delta:hasIncentive" [ label = "owl:onProperty" ];
	"NULL" -> "delta:CustomerCluster" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:Customer" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:Transaction" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:Index" [ label = "owl:someValuesFrom" ];
	"NULL" -> "xsd:dateTime" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:requiresMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "delta:isOwnedBy" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasTransaction" [ label = "owl:onProperty" ];
	"NULL" -> "delta:SystemConstraint" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:clusterDescription" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Property" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:UnitOfMeasure" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:hasPayment" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:float" [ label = "owl:allValuesFrom" ];
	"NULL" -> "xsd:anyURI" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:hasComfortSetting" [ label = "owl:onProperty" ];
	"NULL" -> "saref:consistsOf" [ label = "owl:onProperty" ];
	"NULL" -> "delta:isValidDuringPeriod" [ label = "owl:onProperty" ];
	"NULL" -> "delta:agreesOn" [ label = "owl:onProperty" ];
	"NULL" -> "delta:VirtualNode" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:hasIndex" [ label = "owl:onProperty" ];
	"NULL" -> "delta:SmartContract" [ label = "owl:someValuesFrom" ];
	"NULL" -> "rdfs:Literal" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:hasGranularity" [ label = "owl:onProperty" ];
	"NULL" -> "delta:Sector" [ label = "owl:someValuesFrom" ];
	"NULL" -> "delta:hasRedundancy" [ label = "owl:onProperty" ];
	"NULL" -> "https://w3id.org/def/openadr#belongsTo" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasTimestamp" [ label = "owl:onProperty" ];
	"NULL" -> "delta:hasDurationDescription" [ label = "owl:onProperty" ];
	"NULL" -> "delta:requests" [ label = "owl:onProperty" ];
	"NULL" -> "delta:isRequestedTo" [ label = "owl:onProperty" ];
	"NULL" -> "saref:FeatureOfInterest" [ label = "owl:allValuesFrom" ];
	"NULL" -> "delta:hasProfile" [ label = "owl:onProperty" ];
	"NULL" -> "saref:relatesToMeasurement" [ label = "owl:onProperty" ];
	"http://delta.linkeddata.es/def/core" -> "https://www.linkedin.com/in/albafernandezizquierdo/" [ label = ":creator" ];
	"http://delta.linkeddata.es/def/core" -> "http://purl.org/NET/rdflicense/cc-by4.0" [ label = ":license" ];
	"http://delta.linkeddata.es/def/core" -> "https://www.linkedin.com/in/andrea-cimmino-arriaga-64b6b9112/" [ label = ":creator" ];
	"http://delta.linkeddata.es/def/core" -> "http://www.garcia-castro.com/foaf.rdf#me" [ label = ":creator" ];
	"http://delta.linkeddata.es/def/core" -> "https://w3id.org/def/openadr" [ label = "owl:imports" ];
	"saref:hasValue" -> "owl:topDataProperty" [ label = "rdfs:subPropertyOf" ];
	"delta:clusterDescription" -> "owl:topDataProperty" [ label = "rdfs:subPropertyOf" ];
	"http://www.opengis.net/ont/geosparql#Geometry" -> "http://www.opengis.net/ont/geosparql" [ label = "rdfs:comment" ];
	"http://www.opengis.net/ont/geosparql#Feature" -> "http://www.opengis.net/ont/geosparql#Geometry" [ label = "http://www.opengis.net/ont/geosparql#hasGeometry" ];
	"owl:Thing" -> "xsd:float" [ label = "delta:hasReliability" ];
	"owl:Thing" -> "xsd:float" [ label = "delta:hasPoint" ];
	"owl:Thing" -> "xsd:string" [ label = "delta:hasIp" ];
	"owl:Thing" -> "time:TemporalEntity" [ label = "delta:isValidDuringPeriod" ];
	"owl:Thing" -> "44bbd3cb2dd1168a5005db530bf9e6cd" [ label = "delta:hasViolationType" ];
	"owl:Thing" -> "delta:SmartContract" [ label = "delta:hasSmartContract" ];
	"owl:Thing" -> "xsd:boolean" [ label = "delta:isAvailable" ];
	"owl:Thing" -> "xsd:integer" [ label = "delta:hasPort" ];
	"owl:Thing" -> "xsd:dateTimeStamp" [ label = "delta:occurs" ];
	"owl:Thing" -> "ee36e1f95d1ccf649a2b552db3effd4d" [ label = "delta:implementsDRType" ];
	"delta:Customer" -> "owl:Thing" [ label = "delta:hasReward" ];
	"owl:Thing" -> "time:Duration" [ label = "delta:hasDurationDescription" ];
	"owl:Thing" -> "xsd:float" [ label = "delta:hasViolationValue" ];

}
